"use strict";var ckc=angular.module("ckc",["ngRoute","ngSanitize","firebase"]);
function ckcFooter(){o.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"assets/views/directives/footer.htm",replace:!0,scope:{},link:o,controller:t,controllerAs:"vm",bindToController:!0};function o(e,o,t,c){}function t(e,o){console.log("in the footer directive")}return t.$inject=["$scope","$log"],e}ckc.directive("ckcFooter",ckcFooter);
function ckcNavbar(){n.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"assets/views/directives/navbar.htm",replace:!0,scope:{},link:n,controller:t,controllerAs:"vm",bindToController:!0};function n(o,n,t,c){}function t(o,n,t,c){var e=this;e.user=null,console.log("in the navbar directive"),e.logOut=function(){console.log("logging out"),c.$signOut(),t.path("/login")},e.logIn=function(){console.log("logging in"),t.path("/login")}}return t.$inject=["$scope","$log","$location","Auth"],o}ckc.directive("ckcNavbar",ckcNavbar);
function channelController(){console.log("$routeParams",$routeParams);$log.info("in the chanels controller ",$scope)}ckc.controller("channelController",channelController),channelController.$inject=[];
function dashboardController(o){console.log("$routeParams",o);console.log("in the dash controller")}ckc.controller("dashboardController",dashboardController),dashboardController.$inject=["$routeParams"];
function documentationController(){var o=this;o.data=data,$log.info("in the documentation controller ",o.data,o.url)}ckc.controller("documentationController",documentationController),documentationController.$inject=[];
function loginController(e,r,o){var i=new firebaseui.auth.AuthUI(firebase.auth());i.start("#firebaseui-auth-container",{signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID]});var n={callbacks:{signInSuccessWithAuthResult:function(e,r){e=e.user.uid;return window.location.assign("/#/member/"+e),!1},uiShown:function(){document.getElementById("loader").style.display="none"}},signInFlow:"popup",signInSuccessUrl:"/#/member/290ug",signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID,firebase.auth.PhoneAuthProvider.PROVIDER_ID,firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],tosUrl:"<your-tos-url>",privacyPolicyUrl:"<your-privacy-policy-url>"};i.start("#firebaseui-auth-container",n),r.info("in the login controller")}ckc.controller("loginController",loginController),loginController.$inject=["$scope","$log","stateService"];
function config(e,o){o.hashPrefix(""),e.when("/",{redirectTo:"/member"}).when("/login",{templateUrl:"assets/views/login-page.htm",controller:"loginController",controllerAs:"vm",resolve:{State:["$location",function(e){console.log("resolved"),e.path("/member/L1kSg6D6EIZP2ctV7bI0kEkZRAm2")}]}}).when("/member",{templateUrl:"assets/views/dashboard-page.htm",controller:"dashboardController",controllerAs:"vm",resolve:{state:["$location","State",function(e,o){}]}}).when("/member/:uid",{templateUrl:"assets/views/dashboard-page.htm",controller:"dashboardController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}config.$inject=["$routeProvider","$locationProvider"],angular.module("ckc").config(config);
function Admin(e,r,i){return{get:{docs:function(){var e=firebase.database().ref("Admin/sidebar/doc");return i(e)}}}}ckc.factory("Admin",Admin),Admin.$inject=["$log","$firebaseObject","$firebaseArray"];
function Auth(t){return t()}ckc.factory("Auth",Auth),Auth.$inject=["$firebaseAuth"];
function Channels(e,n,a){return{get:{list:function(){var e=firebase.database().ref("Channels/").orderByChild("name");return n(e)}}}}ckc.factory("Channels",Channels),Channels.$inject=["$log","$firebaseObject","$firebaseArray"];
function Documents(e,r,t){return{get:{one:function(e){e="Resources/"+e,e=firebase.database().ref(e);return r(e)},list:function(){var e=firebase.database().ref("Resources/");return r(e)}}}}Documents.$inject=["$log","$firebaseObject","$firebaseArray"],ckc.factory("Documents",Documents),Channels.$inject=["$log","$firebaseObject","$firebaseArray"];
function Members(e,r,a){return{get:{profile:function(e){e="Members/"+e,e=firebase.database().ref(e);return r(e)},tasks:function(e){var r="Tasks/"+e,e=firebase.database().ref(r).orderByChild("uid").equalTo(e);return a(e)},checklists:function(e){var r="Checklists/"+e,e=firebase.database().ref(r).orderByChild("uid").equalTo(e);return a(e)}}}}ckc.factory("Members",Members),Members.$inject=["$log","$firebaseObject","$firebaseArray"];
function State(t,n){t.info("Instanciating State Factory");t={user:function(){return n.$onAuthStateChanged(t=>(console.log("user: ",t),t))},uid:null};return t.user(),t}ckc.factory("State",State),State.$inject=["$log","Auth"];
function Updates(e,t,a){return{get:{byChannelId:function(e){var a=firebase.firestore();return new Promise(function(t,e){a.collection("Updates").doc("LIqT8yctri3EZILJajKh").get().then(function(e){console.log("dot data"),t(e.data())})})}}}}ckc.factory("Updates",Updates),Updates.$inject=["$log","$firebaseObject","$firebaseArray"];