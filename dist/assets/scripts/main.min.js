"use strict";var ckc=angular.module("ckc",["ngRoute","ngSanitize","firebase"]);
function acctSettingsController(){console.log("in the account settings  controller ")}ckc.controller("acctSettingsController",acctSettingsController),acctSettingsController.$inject=[];
function activitiesController(){console.log("in the activities controller ")}ckc.controller("activitiesController",activitiesController),activitiesController.$inject=[];
function channelController(){console.log("$routeParams",$routeParams);$log.info("in the chanels controller ",$scope)}ckc.controller("channelController",channelController),channelController.$inject=[];
function dashboardController(o){console.log("$routeParams",o);console.log("in the dash controller")}ckc.controller("dashboardController",dashboardController),dashboardController.$inject=["$routeParams"];
function documentationController(){var o=this;o.data=data,$log.info("in the documentation controller ",o.data,o.url)}ckc.controller("documentationController",documentationController),documentationController.$inject=[];
function loginController(){var e=new firebaseui.auth.AuthUI(firebase.auth());e.start("#firebaseui-auth-container",{signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID]});var o={callbacks:{signInSuccessWithAuthResult:function(e,o){e=e.user.uid;return window.location.assign("/#/member/"+e),!1},uiShown:function(){document.getElementById("loader").style.display="none"}},signInFlow:"popup",signInSuccessUrl:"/#/member/290ug",signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID,firebase.auth.PhoneAuthProvider.PROVIDER_ID,firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],tosUrl:"<your-tos-url>",privacyPolicyUrl:"<your-privacy-policy-url>"};e.start("#firebaseui-auth-container",o),console.log("in the login controller")}ckc.controller("loginController",loginController),loginController.$inject=[];
function Admin(e,r,i){return{get:{docs:function(){var e=firebase.database().ref("Admin/sidebar/doc");return i(e)}}}}ckc.factory("Admin",Admin),Admin.$inject=["$log","$firebaseObject","$firebaseArray"];
function Auth(t){return t()}ckc.factory("Auth",Auth),Auth.$inject=["$firebaseAuth"];
function Channels(e,n,a){return{get:{list:function(){var e=firebase.database().ref("Channels/").orderByChild("name");return n(e)}}}}ckc.factory("Channels",Channels),Channels.$inject=["$log","$firebaseObject","$firebaseArray"];
function Documents(e,r,t){return{get:{one:function(e){e="Resources/"+e,e=firebase.database().ref(e);return r(e)},list:function(){var e=firebase.database().ref("Resources/");return r(e)}}}}Documents.$inject=["$log","$firebaseObject","$firebaseArray"],ckc.factory("Documents",Documents),Channels.$inject=["$log","$firebaseObject","$firebaseArray"];
function Members(e,r,a){return{get:{profile:function(e){e="Members/"+e,e=firebase.database().ref(e);return r(e)},tasks:function(e){var r="Tasks/"+e,e=firebase.database().ref(r).orderByChild("uid").equalTo(e);return a(e)},checklists:function(e){var r="Checklists/"+e,e=firebase.database().ref(r).orderByChild("uid").equalTo(e);return a(e)}}}}ckc.factory("Members",Members),Members.$inject=["$log","$firebaseObject","$firebaseArray"];
function State(t,e){return t.info("Instanciating State Factory"),{user:function(){return new Promise(function(n,t){e.$onAuthStateChanged(t=>{n(t)})})},uid:null}}ckc.factory("State",State),State.$inject=["$log","Auth"];
function Updates(e,t,a){return{get:{byChannelId:function(e){var a=firebase.firestore();return new Promise(function(t,e){a.collection("Updates").doc("LIqT8yctri3EZILJajKh").get().then(function(e){console.log("dot data"),t(e.data())})})}}}}ckc.factory("Updates",Updates),Updates.$inject=["$log","$firebaseObject","$firebaseArray"];
function config(e,r){r.hashPrefix(""),e.when("/",{redirectTo:"/member"}).when("/login",{templateUrl:"assets/views/login-page.htm",controller:"loginController",controllerAs:"vm"}).when("/member",{templateUrl:"assets/views/dashboard-page.htm",controller:"dashboardController",controllerAs:"vm",resolve:{user:["State","$q","$location",function(e,r,t){var o=r.defer();return e.user().then(function(e){e?t.path("/member/"+e.uid):t.path("/login"),o.resolve()}),o.promise}]}}).when("/member/:uid",{templateUrl:"assets/views/dashboard-page.htm",controller:"dashboardController",controllerAs:"vm",resolve:{user:["State","$q","$location",function(e,r,t){var o=r.defer();return e.user().then(function(e){e?t.path("/member/"+e.uid):t.path("/login"),o.resolve()}),o.promise}]}}).when("/member/:uid/settings",{templateUrl:"assets/views/acct-settings-page.htm",controller:"acctSettingsController",controllerAs:"vm",resolve:{user:["State","$q","$location",function(e,r,t){var o=r.defer();return e.user().then(function(e){e?t.path("/member/"+e.uid+"/settings"):t.path("/login"),o.resolve()}),o.promise}]}}).when("/member/:uid/activities",{templateUrl:"assets/views/activities-page.htm",controller:"activitiesController",controllerAs:"vm",resolve:{user:["State","$q","$location",function(e,r,t){var o=r.defer();return e.user().then(function(e){e?t.path("/member/"+e.uid+"/activities"):t.path("/login"),o.resolve()}),o.promise}]}}).otherwise({redirectTo:"/"})}config.$inject=["$routeProvider","$locationProvider"],angular.module("ckc").config(config);
function activity(){i.$inject=["scope","el","attr","ctrl"];var t={restrict:"AECM",templateUrl:"assets/views/directives/activity.htm",replace:!0,scope:{},link:i,controller:e,controllerAs:"vm",bindToController:!0};function i(t,i,e,c){}function e(i,e){this.buttons=function(t){console.log("Clicked ",t),"selectActivity"===t&&e.path("/member/"+i.uid+"/activities")},console.log("in the activity directive")}return e.$inject=["State","$location"],t}ckc.directive("activity",activity);
function ckcFooter(){o.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"assets/views/directives/footer.htm",replace:!0,scope:{},link:o,controller:t,controllerAs:"vm",bindToController:!0};function o(e,o,t,c){}function t(e,o){console.log("in the footer directive")}return t.$inject=["$scope","$log"],e}ckc.directive("ckcFooter",ckcFooter);
function ckcNavbar(){o.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"assets/views/directives/navbar.htm",replace:!0,scope:{},link:o,controller:c,controllerAs:"vm",bindToController:!0};function o(e,o,c,t){}function c(e,o,c,t){var n=this;n.user=null,console.log("in the navbar directive"),t.$onAuthStateChanged(e=>{console.log("user: ",e),n.user=e}),n.menuClick=function(e){switch(e){case"Menu":console.log("Menu clicked"),c.path("/member/"+n.user.uid);break;case"Reports":console.log("Reports Clicked");break;case"Settings":console.log("settings clicked"),c.path("/member/"+n.user.uid+"/settings");break;case"Login":console.log("logging in"),c.path("/login");break;case"LogOut":console.log("logging out"),t.$signOut(),c.path("/login")}}}return c.$inject=["$scope","$log","$location","Auth"],e}ckc.directive("ckcNavbar",ckcNavbar);