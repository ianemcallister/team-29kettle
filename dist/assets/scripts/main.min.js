"use strict";var ckc=angular.module("ckc",["ngRoute","ngSanitize","firebase"]);
function dashboardController(o,r,e,l,t){console.log("$routeParams",e);this.userProfile=t.get.profile(e.uid),this.today=moment().format("dddd, M/D/YY"),console.log(l),r.info("in the dash controller")}ckc.controller("dashboardController",dashboardController),dashboardController.$inject=["$scope","$log","$routeParams","$firebaseAuth","Members"];
function loginController(e,r,o){var i=new firebaseui.auth.AuthUI(firebase.auth());i.start("#firebaseui-auth-container",{signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID]});var n={callbacks:{signInSuccessWithAuthResult:function(e,r){e=e.user.uid;return window.location.assign("/#/member/"+e),!1},uiShown:function(){document.getElementById("loader").style.display="none"}},signInFlow:"popup",signInSuccessUrl:"/#/member/290ug",signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID,firebase.auth.PhoneAuthProvider.PROVIDER_ID,firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],tosUrl:"<your-tos-url>",privacyPolicyUrl:"<your-privacy-policy-url>"};i.start("#firebaseui-auth-container",n),r.info("in the login controller")}ckc.controller("loginController",loginController),loginController.$inject=["$scope","$log","stateService"];
function ckcFooter(){o.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"assets/views/directives/footer.htm",replace:!0,scope:{},link:o,controller:t,controllerAs:"vm",bindToController:!0};function o(e,o,t,c){}function t(e,o){console.log("in the footer directive")}return t.$inject=["$scope","$log"],e}ckc.directive("ckcFooter",ckcFooter);
function ckcNavbar(){e.$inject=["scope","el","attr","ctrl"];var c={restrict:"AECM",templateUrl:"assets/views/directives/navbar.htm",replace:!0,scope:{},link:e,controller:r,controllerAs:"vm",bindToController:!0};function e(c,e,r,t){}function r(c,e){console.log("in the navbar directive")}return r.$inject=["$scope","$log","Auth"],c}ckc.directive("ckcNavbar",ckcNavbar);
function Auth(t,u){return!0}ckc.factory("Auth",Auth),Auth.$inject=["$log","$firebaseAuth"];
function Members(e,r){return{get:{profile:function(e){console.log("got this UID: ",e);e="Members/"+e,e=firebase.database().ref(e);return r(e)}}}}ckc.factory("Members",Members),Members.$inject=["$log","$firebaseObject"];
function stateService(e){e.info("Instanciating stateService Factory");return{}}ckc.factory("stateService",stateService),stateService.$inject=["$log"];
function config(e,r){r.hashPrefix(""),e.when("/",{redirectTo:"/login"}).when("/login",{templateUrl:"assets/views/login-page.htm",controller:"loginController",controllerAs:"vm"}).when("/member/:uid",{templateUrl:"assets/views/dashboard-page.htm",controller:"dashboardController",controllerAs:"vm"}).when("/member/:uid/channels/:chanelId",{templateUrl:"assets/views/channel-page.htm",controller:"channelController",controllerAs:"vm"}).when("/member/:uid/resources/:resourceId",{templateUrl:"assets/views/resource-page.htm",controller:"resourceController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}config.$inject=["$routeProvider","$locationProvider"],angular.module("ckc").config(config);