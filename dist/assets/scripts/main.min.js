"use strict";var ckc=angular.module("ckc",["ngRoute","ngSanitize","firebase"]);
function Admin(e,r,i){return{get:{docs:function(){var e=firebase.database().ref("Admin/sidebar/doc");return i(e)}}}}ckc.factory("Admin",Admin),Admin.$inject=["$log","$firebaseObject","$firebaseArray"];
function Auth(t){return t()}ckc.factory("Auth",Auth),Auth.$inject=["$firebaseAuth"];
function Channels(e,n,a){return{get:{list:function(){var e=firebase.database().ref("Channels/").orderByChild("name");return n(e)}}}}ckc.factory("Channels",Channels),Channels.$inject=["$log","$firebaseObject","$firebaseArray"];
function Documents(e,r,t){return{get:{one:function(e){e="Resources/"+e,e=firebase.database().ref(e);return r(e)},list:function(){var e=firebase.database().ref("Resources/");return r(e)}}}}Documents.$inject=["$log","$firebaseObject","$firebaseArray"],ckc.factory("Documents",Documents),Channels.$inject=["$log","$firebaseObject","$firebaseArray"];
function Members(e,r,a){return{get:{profile:function(e){e="Members/"+e,e=firebase.database().ref(e);return r(e)},tasks:function(e){var r="Tasks/"+e,e=firebase.database().ref(r).orderByChild("uid").equalTo(e);return a(e)},checklists:function(e){var r="Checklists/"+e,e=firebase.database().ref(r).orderByChild("uid").equalTo(e);return a(e)}}}}ckc.factory("Members",Members),Members.$inject=["$log","$firebaseObject","$firebaseArray"];
function stateService(e){e.info("Instanciating stateService Factory");return{}}ckc.factory("stateService",stateService),stateService.$inject=["$log"];
function Updates(e,t,a){return{get:{byChannelId:function(e){var a=firebase.firestore();return new Promise(function(t,e){a.collection("Updates").doc("LIqT8yctri3EZILJajKh").get().then(function(e){console.log("dot data"),t(e.data())})})}}}}ckc.factory("Updates",Updates),Updates.$inject=["$log","$firebaseObject","$firebaseArray"];
function channelController(n,e,o,l,t,r){console.log("$routeParams",l);var c=this;c.model=t,c.test="testing",r.get.byChannelId().then(function(n){c.updates=n}),e.info("in the chanels controller ",n)}ckc.controller("channelController",channelController),channelController.$inject=["$scope","$log","$location","$routeParams","model","Updates"];
function dashboardController(o,e,r,s,t,l,a){console.log("$routeParams",r);var d=this;d.today=moment().format("dddd, M/D/YY"),d.userProfile=t.get.profile(r.uid),d.userCheckLists=t.get.tasks(r.uid),d.docs=a.get.docs(),d.resources={channels:l.get.list()},console.log(s),e.info("in the dash controller")}ckc.controller("dashboardController",dashboardController),dashboardController.$inject=["$scope","$log","$routeParams","$firebaseAuth","Members","Channels","Admin"];
function documentationController(o,t,n,e,r,l){console.log("$routeParams",e);e=this;e.data=r,e.url=l.getTrustedUrl(e.data.document),e.resolveURL=function(o){return l.getTrustedUrl(o)},t.info("in the documentation controller ",e.data,e.url)}ckc.controller("documentationController",documentationController),documentationController.$inject=["$scope","$log","$location","$routeParams","data","$sce"];
function loginController(e,r,o){var i=new firebaseui.auth.AuthUI(firebase.auth());i.start("#firebaseui-auth-container",{signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID]});var n={callbacks:{signInSuccessWithAuthResult:function(e,r){e=e.user.uid;return window.location.assign("/#/member/"+e),!1},uiShown:function(){document.getElementById("loader").style.display="none"}},signInFlow:"popup",signInSuccessUrl:"/#/member/290ug",signInOptions:[firebase.auth.EmailAuthProvider.PROVIDER_ID,firebase.auth.PhoneAuthProvider.PROVIDER_ID,firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.FacebookAuthProvider.PROVIDER_ID],tosUrl:"<your-tos-url>",privacyPolicyUrl:"<your-privacy-policy-url>"};i.start("#firebaseui-auth-container",n),r.info("in the login controller")}ckc.controller("loginController",loginController),loginController.$inject=["$scope","$log","stateService"];
function ckcFooter(){o.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"assets/views/directives/footer.htm",replace:!0,scope:{},link:o,controller:t,controllerAs:"vm",bindToController:!0};function o(e,o,t,c){}function t(e,o){console.log("in the footer directive")}return t.$inject=["$scope","$log"],e}ckc.directive("ckcFooter",ckcFooter);
function ckcNavbar(){e.$inject=["scope","el","attr","ctrl"];var t={restrict:"AECM",templateUrl:"assets/views/directives/navbar.htm",replace:!0,scope:{},link:e,controller:o,controllerAs:"vm",bindToController:!0};function e(t,e,o,c){}function o(t,e,o){console.log("in the navbar directive"),o.$onAuthStateChanged(t=>{console.log("user: ",t)}),this.logout=function(){console.log("logging out"),o.$signOut()}}return o.$inject=["$scope","$log","Auth"],t}ckc.directive("ckcNavbar",ckcNavbar);
function config(e,r){r.hashPrefix(""),e.when("/",{redirectTo:"/login"}).when("/login",{templateUrl:"assets/views/login-page.htm",controller:"loginController",controllerAs:"vm"}).when("/member/:uid",{templateUrl:"assets/views/dashboard-page.htm",controller:"dashboardController",controllerAs:"vm"}).when("/member/:uid/channels/:chanelId",{templateUrl:"assets/views/channel-page.htm",controller:"channelController",controllerAs:"vm"}).when("/member/:uid/resources",{templateUrl:"assets/views/resource-page.htm",controller:"resourceController",controllerAs:"vm"}).when("/member/:uid/resources/:resourceId",{templateUrl:"assets/views/resource-page.htm",controller:"resourceController",controllerAs:"vm"}).otherwise({redirectTo:"/"})}config.$inject=["$routeProvider","$locationProvider"],angular.module("ckc").config(config);